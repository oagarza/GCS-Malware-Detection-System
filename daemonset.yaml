apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: ransomware-detection-daemonset
  namespace: default
spec:
  selector:
    matchLabels:
      app: ransomware-detection-app
  template:
    metadata:
      labels:
        app: ransomware-detection-app
    spec:
      serviceAccountName: api-access  # Use the service account with necessary permissions
      hostNetwork: true               # Enable host networking
      containers:
      - name: remnux-distro-1
        image: remnux/remnux-distro:latest
        command: ["/bin/bash", "-c"]
        args:
          - |
            # Check if Suricata is installed and install it if not
            if ! command -v suricata &> /dev/null; then
              apt-get update --allow-releaseinfo-change || true
              apt-get install -y software-properties-common
              add-apt-repository ppa:oisf/suricata-stable -y
              apt-get update
              apt-get install -y suricata
              suricata-update
            fi

            # Update Suricata configuration for eth0 interface
            sed -i 's/interface: .*/interface: eth0/' /etc/suricata/suricata.yaml

            # Install Python packages
            pip install google-cloud-bigquery google-cloud-storage requests

            # Continuously run the script
            while true; do
              python3 /app/scripts/threat_detection.py
              echo "Sleeping for 10 seconds before the next run..."
              sleep 10
            done
        volumeMounts:
        - name: script-volume
          mountPath: /app/scripts  # Mount point for the script inside the container
        - name: google-cloud-key  # Mounting the Google Cloud Service Account Key
          mountPath: /etc/gcp
          readOnly: true
        securityContext:
          runAsUser: 0  # Run as root user
          runAsGroup: 0  # Run as root group
          privileged: true  # Run in privileged mode
          capabilities:
            add: ["NET_RAW", "NET_ADMIN"]  # Required capabilities for packet capture
      volumes:
      - name: script-volume
        configMap:
          name: threat-detection-script  # Name of your ConfigMap containing the script
      - name: google-cloud-key  # Definition of the volume for the Google Cloud Service Account Key
        secret:
          secretName: gcp-service-account-key  # Name of your Secret containing the GCP service account key
